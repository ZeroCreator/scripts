#!/bin/bash

#--------------------------------------------------------------------
# Script to Deployment Projects
# –°–∫—Ä–∏–ø—Ç –¥–ª—è –¥–µ–ø–ª–æ—è –ø—Ä–æ–µ–∫—Ç–æ–≤ ->
# - –ø–µ—Ä–µ—Ö–æ–¥–∏—Ç –≤ —Ä–∞–±–æ—á—É—é –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é –ø—Ä–æ–µ–∫—Ç–∞,
# - —É–¥–∞–ª—è–µ—Ç —Å—Ç–∞—Ä—ã–π –æ–±—Ä–∞–∑,
# - —Å–æ–±–∏—Ä–∞–µ—Ç –Ω–æ–≤—ã–π –æ–±—Ä–∞–∑,
# - –ø—É–±–ª–∏–∫—É–µ—Ç –µ–≥–æ –≤ docker-registry –∏
# - –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏—è –≤ telegram-–∫–∞–Ω–∞–ª
# Tested on Ubuntu 24.04.1 LTS
# Developed by Olga Shkola in 2025
#--------------------------------------------------------------------

# –ü–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –¥–ª—è –∑–∞–ø—É—Å–∫–∞ —Å–∫—Ä–∏–ø—Ç–∞:
# –¢–æ–∫–µ–Ω –∏ ID —Ç–µ–ª–µ–≥—Ä–∞–º-–∫–∞–Ω–∞–ª–∞ ->
# TELEGRAM_TOKEN
# TELEGRAM_CHAT_ID
# –î–∏—Ä–µ–∫—Ç–æ—Ä–∏—è, –≥–¥–µ –±—É–¥–µ—Ç —Å–æ–±–∏—Ä–∞—Ç—å—Å—è –æ–±—Ä–∞–∑ ->
# WORKDIR
# –î–∏—Ä–µ–∫—Ç–æ—Ä–∏—è docker-registry ->
# DOCKER_REGISTRY
# –ò–º—è –ø—Ä–æ–µ–∫—Ç–∞ ->
# PROJECT_NAME
# –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–æ–Ω–Ω—ã–π —Ñ–∞–π–ª, –≥–¥–µ —Ö—Ä–∞–Ω—è—Ç—Å—è –≤—Å–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ ->
# CONFIG_FILE


# –ê–∫—Ç–∏–≤–∏—Ä—É–µ–º —Å—Ç—Ä–æ–≥–∏–π —Ä–µ–∂–∏–º (–Ω–æ —Å –æ—Å—Ç–æ—Ä–æ–∂–Ω–æ—Å—Ç—å—é –¥–ª—è SSH_AUTH_SOCK)
set -eEo pipefail

# –ó–∞–≥—Ä—É–∂–∞–µ–º –∫–æ–Ω—Ñ–∏–≥
CONFIG_FILE="${1:-config}"
source "$CONFIG_FILE" || {
    echo "‚ùå Failed to load config file"
    exit 1
}

# --- –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–Ω—ã–π –±–ª–æ–∫ —Å SSH-–∞–≥–µ–Ω—Ç–æ–º ---
set +u  # –í—Ä–µ–º–µ–Ω–Ω–æ —Ä–∞–∑—Ä–µ—à–∞–µ–º –Ω–µ–æ–ø—Ä–µ–¥–µ–ª—ë–Ω–Ω—ã–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ
if [ -z "${SSH_AUTH_SOCK:-}" ]; then
    echo "üîÑ –ó–∞–ø—É—Å–∫–∞–µ–º SSH-–∞–≥–µ–Ω—Ç..."
    eval "$(ssh-agent -s)"
    ssh-add ~/.ssh/id_rsa || {
        echo "‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –¥–æ–±–∞–≤–∏—Ç—å SSH-–∫–ª—é—á"
        exit 1
    }
    export SSH_AUTH_SOCK
fi
set -u  # –í–æ–∑–≤—Ä–∞—â–∞–µ–º —Å—Ç—Ä–æ–≥–∏–π —Ä–µ–∂–∏–º
# --------------------------------------

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞–ª–∏—á–∏—è –∞—Ä–≥—É–º–µ–Ω—Ç–∞
if [ "$#" -ne 1 ]; then
    echo "–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: $0 –ø—É—Ç—å_–∫_–∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–æ–Ω–Ω–æ–º—É_—Ñ–∞–π–ª—É" >&2
    exit 1
fi

CONFIG_FILE="$1"

# –ó–∞–≥—Ä—É–∑–∫–∞ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –∏–∑ —Ñ–∞–π–ª–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏
if [ -f "$CONFIG_FILE" ]; then
    . "$CONFIG_FILE"
else
    echo "–§–∞–π–ª –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ $CONFIG_FILE –Ω–µ –Ω–∞–π–¥–µ–Ω." >&2
    exit 1
fi

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã—Ö –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö
for var in TELEGRAM_TOKEN TELEGRAM_CHAT_ID WORKDIR DOCKER_REGISTRY PROJECT_NAME; do
    if [ -z "${!var}" ]; then
        echo "–ü–µ—Ä–µ–º–µ–Ω–Ω–∞—è $var –Ω–µ –∑–∞–¥–∞–Ω–∞" >&2
        exit 1
    fi
done

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏—è –≤ Telegram
# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏—è –≤ Telegram —Å –ø–æ–≤—Ç–æ—Ä–Ω—ã–º–∏ –ø–æ–ø—ã—Ç–∫–∞–º–∏
send_telegram_message() {
    local message="$1"
    local max_attempts=3
    local attempt=1
    local wait_time=5

    while [ $attempt -le $max_attempts ]; do
        if curl -s -X POST "https://api.telegram.org/bot$TELEGRAM_TOKEN/sendMessage" \
             -d chat_id="$TELEGRAM_CHAT_ID" \
             -d text="$message" \
             -d parse_mode="Markdown" \
             --connect-timeout 10 \
             --max-time 30; then
            echo "‚úÖ –°–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –≤ Telegram (–ø–æ–ø—ã—Ç–∫–∞ $attempt)"
            return 0
        else
            echo "‚ö†Ô∏è –û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ –≤ Telegram (–ø–æ–ø—ã—Ç–∫–∞ $attempt), –ø–æ–≤—Ç–æ—Ä —á–µ—Ä–µ–∑ ${wait_time}—Å..."
            sleep $wait_time
            attempt=$((attempt + 1))
            wait_time=$((wait_time * 2))  # Exponential backoff
        fi
    done

    echo "‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ Telegram –ø–æ—Å–ª–µ $max_attempts –ø–æ–ø—ã—Ç–æ–∫"
    return 1
}

# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ª–æ–≥-—Ñ–∞–π–ª–∞
LOG_FILE="${LOGDIR:-/tmp}/${PROJECT_NAME}_$(date '+%Y%m%d_%H%M%S').log"
exec 3>&1 4>&2
exec > >(tee -a "${LOG_FILE}") 2>&1

# –§—É–Ω–∫—Ü–∏—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –æ—à–∏–±–æ–∫
handle_error() {
    local exit_code=$?
    local line_number=$1
    local command=$2

    error_message="‚ùå [–°–±–æ–π] –ü—Ä–æ–µ–∫—Ç: ${PROJECT_NAME}
–û—à–∏–±–∫–∞ –≤ —Å—Ç—Ä–æ–∫–µ ${line_number}: ${command}
–ö–æ–¥ –æ—à–∏–±–∫–∏: ${exit_code}
–î–∏—Ä–µ–∫—Ç–æ—Ä–∏—è: $(pwd)
–í—Ä–µ–º—è: $(date '+%Y-%m-%d %H:%M:%S')
–õ–æ–≥–∏: ${LOG_FILE}"

    echo "${error_message}" >&2
    send_telegram_message "${error_message}"
    exit ${exit_code}
}

# –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –æ—à–∏–±–æ–∫
trap 'handle_error ${LINENO} "${BASH_COMMAND}"' ERR
set -eEuo pipefail

# –û—Å–Ω–æ–≤–Ω–æ–π –∫–æ–¥ —Å–∫—Ä–∏–ø—Ç–∞
echo "-*-*-*-START-*-*-*-"
send_telegram_message "‚ÑπÔ∏è –ó–∞–ø—É—Å–∫ —Å–∫—Ä–∏–ø—Ç–∞ –ø—Ä–æ–µ–∫—Ç–∞ ${PROJECT_NAME}: $(date '+%Y-%m-%d %H:%M:%S')"

echo "–°–∫—Ä–∏–ø—Ç –∑–∞–ø—É—â–µ–Ω: $(date '+%Y-%m-%d %H:%M:%S')"
echo "–ü–µ—Ä–µ—Ö–æ–¥–∏–º –≤ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é ${WORKDIR}"

cd "${WORKDIR}" || {
    error_msg="‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –ø–µ—Ä–µ–π—Ç–∏ –≤ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é ${WORKDIR}"
    echo "${error_msg}" >&2
    send_telegram_message "${error_msg}"
    exit 1
}

echo "–î–∏—Ä–µ–∫—Ç–æ—Ä–∏—è –∏–∑–º–µ–Ω–µ–Ω–∞ –Ω–∞: $(pwd)"

# –ü–µ—Ä–µ–∏–º–µ–Ω–æ–≤–∞–Ω–∏–µ –æ–±—Ä–∞–∑–∞
IMAGE_ID=$(docker images -q "${DOCKER_REGISTRY}/${PROJECT_NAME}:latest")
if [ -n "${IMAGE_ID}" ]; then
    CREATION_DATE=$(docker inspect --format='{{.Created}}' "${IMAGE_ID}")
    NEW_TAG="${DOCKER_REGISTRY}/${PROJECT_NAME}:$(date -d "${CREATION_DATE}" '+%Y-%m-%d-%H-%M-%S')"

    if docker tag "${IMAGE_ID}" "${NEW_TAG}"; then
        echo "–û–±—Ä–∞–∑ –ø–µ—Ä–µ–∏–º–µ–Ω–æ–≤–∞–Ω: ${NEW_TAG}"
    else
        echo "‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å –ø–µ—Ä–µ–∏–º–µ–Ω–æ–≤–∞—Ç—å –æ–±—Ä–∞–∑" >&2
    fi
fi

# –°–±–æ—Ä–∫–∞ –æ–±—Ä–∞–∑–∞
echo "–ù–∞—á–∏–Ω–∞–µ–º —Å–±–æ—Ä–∫—É –æ–±—Ä–∞–∑–∞ ${PROJECT_NAME}"
# –ü—Ä–æ–≤–µ—Ä—è–µ–º, –∑–∞–ø—É—â–µ–Ω –ª–∏ SSH-–∞–≥–µ–Ω—Ç
if [ -z "$SSH_AUTH_SOCK" ]; then
    eval "$(ssh-agent -s)"
    ssh-add ~/.ssh/id_rsa
    export SSH_AUTH_SOCK
fi

if docker compose build --no-cache; then
    echo "–°–±–æ—Ä–∫–∞ —É—Å–ø–µ—à–Ω–æ –∑–∞–≤–µ—Ä—à–µ–Ω–∞"
    send_telegram_message "‚ÑπÔ∏è –û–±—Ä–∞–∑ ${PROJECT_NAME} —É—Å–ø–µ—à–Ω–æ —Å–æ–±—Ä–∞–Ω"
else
    error_msg="‚ùå –û—à–∏–±–∫–∞ —Å–±–æ—Ä–∫–∏ –æ–±—Ä–∞–∑–∞ ${PROJECT_NAME}"
    echo "${error_msg}" >&2
    send_telegram_message "${error_msg}"
    exit 1
fi

# –ü—É–±–ª–∏–∫–∞—Ü–∏—è –æ–±—Ä–∞–∑–∞
echo "–ü—É–±–ª–∏–∫–∞—Ü–∏—è –æ–±—Ä–∞–∑–∞ ${DOCKER_REGISTRY}/${PROJECT_NAME}:latest"
if docker push "${DOCKER_REGISTRY}/${PROJECT_NAME}:latest"; then
    echo "–û–±—Ä–∞–∑ —É—Å–ø–µ—à–Ω–æ –æ–ø—É–±–ª–∏–∫–æ–≤–∞–Ω"
    send_telegram_message "‚ÑπÔ∏è –û–±—Ä–∞–∑ ${PROJECT_NAME} —É—Å–ø–µ—à–Ω–æ –æ–ø—É–±–ª–∏–∫–æ–≤–∞–Ω"
else
    error_msg="‚ùå –û—à–∏–±–∫–∞ –ø—É–±–ª–∏–∫–∞—Ü–∏–∏ –æ–±—Ä–∞–∑–∞ ${PROJECT_NAME}"
    echo "${error_msg}" >&2
    send_telegram_message "${error_msg}"
    exit 1
fi

# –£—Å–ø–µ—à–Ω–æ–µ –∑–∞–≤–µ—Ä—à–µ–Ω–∏–µ
send_telegram_message "‚úÖ –°–∫—Ä–∏–ø—Ç –ø—Ä–æ–µ–∫—Ç–∞ ${PROJECT_NAME} —É—Å–ø–µ—à–Ω–æ –≤—ã–ø–æ–ª–Ω–µ–Ω: $(date '+%Y-%m-%d %H:%M:%S')"
echo "–°–∫—Ä–∏–ø—Ç –∑–∞–≤–µ—Ä—à–µ–Ω —É—Å–ø–µ—à–Ω–æ"
exit 0
